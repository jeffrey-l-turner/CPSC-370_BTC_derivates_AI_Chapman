/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockLooksRareRewardsDistributor } from "../MockLooksRareRewardsDistributor";

export class MockLooksRareRewardsDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _routerRewardsDistributor: string,
    _looksRareToken: string,
    overrides?: Overrides
  ): Promise<MockLooksRareRewardsDistributor> {
    return super.deploy(
      _routerRewardsDistributor,
      _looksRareToken,
      overrides || {}
    ) as Promise<MockLooksRareRewardsDistributor>;
  }
  getDeployTransaction(
    _routerRewardsDistributor: string,
    _looksRareToken: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _routerRewardsDistributor,
      _looksRareToken,
      overrides || {}
    );
  }
  attach(address: string): MockLooksRareRewardsDistributor {
    return super.attach(address) as MockLooksRareRewardsDistributor;
  }
  connect(signer: Signer): MockLooksRareRewardsDistributor__factory {
    return super.connect(signer) as MockLooksRareRewardsDistributor__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockLooksRareRewardsDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockLooksRareRewardsDistributor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_routerRewardsDistributor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_looksRareToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "routerRewardsDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c03461008a57601f61033338819003918201601f19168301916001600160401b0383118484101761008f57808492604094855283398101031261008a57610052602061004b836100a5565b92016100a5565b6080919091526001600160a01b031660a05260405161027990816100ba823960805181818160c901526101d4015260a05181602d0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361008a5756fe6080806040526004361015610174575b50346101285773ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016906040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526020918282602481875afa908115610134578392600092610140575b50604490600060405196879485937fa9059cbb0000000000000000000000000000000000000000000000000000000085527f000000000000000000000000000000000000000000000000000000000000000016600485015260248401525af180156101345761010157005b81813d831161012d575b61011581836101fc565b8101031261012857518015150361012857005b600080fd5b503d61010b565b6040513d6000823e3d90fd5b91909282813d831161016d575b61015781836101fc565b8101031261016a57505182916044610096565b80fd5b503d61014d565b600090813560e01c635abe7a361461018c575061000f565b346101f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f85760209073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761023d57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000811000a";
