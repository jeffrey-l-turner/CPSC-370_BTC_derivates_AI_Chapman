/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ICryptoPunksMarketInterface extends ethers.utils.Interface {
  functions: {
    "buyPunk(uint256)": FunctionFragment;
    "transferPunk(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "buyPunk",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferPunk",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "buyPunk", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferPunk",
    data: BytesLike
  ): Result;

  events: {};
}

export class ICryptoPunksMarket extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ICryptoPunksMarketInterface;

  functions: {
    buyPunk(
      punkIndex: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "buyPunk(uint256)"(
      punkIndex: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    transferPunk(
      to: string,
      punkIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferPunk(address,uint256)"(
      to: string,
      punkIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  buyPunk(
    punkIndex: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "buyPunk(uint256)"(
    punkIndex: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  transferPunk(
    to: string,
    punkIndex: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferPunk(address,uint256)"(
    to: string,
    punkIndex: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    buyPunk(punkIndex: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "buyPunk(uint256)"(
      punkIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferPunk(
      to: string,
      punkIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferPunk(address,uint256)"(
      to: string,
      punkIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    buyPunk(
      punkIndex: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "buyPunk(uint256)"(
      punkIndex: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    transferPunk(
      to: string,
      punkIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferPunk(address,uint256)"(
      to: string,
      punkIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    buyPunk(
      punkIndex: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "buyPunk(uint256)"(
      punkIndex: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    transferPunk(
      to: string,
      punkIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferPunk(address,uint256)"(
      to: string,
      punkIndex: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
