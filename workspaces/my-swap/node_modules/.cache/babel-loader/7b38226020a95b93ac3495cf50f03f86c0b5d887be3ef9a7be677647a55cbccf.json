{"ast":null,"code":"var _jsxFileName = \"/Users/carsonmccue/Desktop/CPSC-370_BTC_derivates_AI_Chapman/workspaces/my-swap/src/example/Example.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './Example.css';\nimport { Environment, CurrentConfig } from '../config';\nimport { getCurrencyBalance } from '../libs/wallet';\nimport { connectBrowserExtensionWallet, getProvider, getWalletAddress, TransactionState } from '../libs/providers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useOnBlockUpdated = callback => {\n  _s();\n  useEffect(() => {\n    var _getProvider;\n    const subscription = (_getProvider = getProvider()) === null || _getProvider === void 0 ? void 0 : _getProvider.on('block', callback);\n    return () => {\n      subscription === null || subscription === void 0 ? void 0 : subscription.removeAllListeners();\n    };\n  });\n};\n_s(useOnBlockUpdated, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nconst Example = () => {\n  _s2();\n  const [tokenInBalance, setTokenInBalance] = useState();\n  const [tokenOutBalance, setTokenOutBalance] = useState();\n  const [txState, setTxState] = useState(TransactionState.New);\n  const [blockNumber, setBlockNumber] = useState(0);\n\n  // Listen for new blocks and update the wallet\n  useOnBlockUpdated(async blockNumber => {\n    refreshBalances();\n    setBlockNumber(blockNumber);\n  });\n\n  // Update wallet state given a block number\n  const refreshBalances = useCallback(async () => {\n    const provider = getProvider();\n    const address = getWalletAddress();\n    if (!address || !provider) {\n      return;\n    }\n    setTokenInBalance(await getCurrencyBalance(provider, address, CurrentConfig.currencies.in));\n    setTokenOutBalance(await getCurrencyBalance(provider, address, CurrentConfig.currencies.out));\n  }, []);\n\n  // Event Handlers\n\n  const onConnectWallet = useCallback(async () => {\n    if (await connectBrowserExtensionWallet()) {\n      refreshBalances();\n    }\n  }, [refreshBalances]);\n  const onAction = useCallback(async () => {\n    // TODO do your action here\n    setTxState(TransactionState.Sent);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [CurrentConfig.rpc.mainnet === '' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"error\",\n      children: \"Please set your mainnet RPC URL in config.ts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), CurrentConfig.env === Environment.WALLET_EXTENSION && getProvider() === null && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"error\",\n      children: \"Please install a wallet to use this example configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `Wallet Address: ${getWalletAddress()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), CurrentConfig.env === Environment.WALLET_EXTENSION && !getWalletAddress() && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onConnectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `Block Number: ${blockNumber + 1}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `Transaction State: ${txState}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `Token In (${CurrentConfig.currencies.in.symbol}) Balance: ${tokenInBalance}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `Token Out (${CurrentConfig.currencies.out.symbol}) Balance: ${tokenOutBalance}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAction,\n      disabled: txState === TransactionState.Sending || getProvider() === null || CurrentConfig.rpc.mainnet === '',\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(Example, \"Wl/RifcFwAkBaJpmeKX6A8x+zT8=\", false, function () {\n  return [useOnBlockUpdated];\n});\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","Environment","CurrentConfig","getCurrencyBalance","connectBrowserExtensionWallet","getProvider","getWalletAddress","TransactionState","useOnBlockUpdated","callback","subscription","on","removeAllListeners","Example","tokenInBalance","setTokenInBalance","tokenOutBalance","setTokenOutBalance","txState","setTxState","New","blockNumber","setBlockNumber","refreshBalances","provider","address","currencies","in","out","onConnectWallet","onAction","Sent","rpc","mainnet","env","WALLET_EXTENSION","symbol","Sending"],"sources":["/Users/carsonmccue/Desktop/CPSC-370_BTC_derivates_AI_Chapman/workspaces/my-swap/src/example/Example.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport './Example.css'\nimport { Environment, CurrentConfig } from '../config'\nimport { getCurrencyBalance } from '../libs/wallet'\nimport {\n  connectBrowserExtensionWallet,\n  getProvider,\n  getWalletAddress,\n  TransactionState,\n} from '../libs/providers'\n\nconst useOnBlockUpdated = (callback: (blockNumber: number) => void) => {\n  useEffect(() => {\n    const subscription = getProvider()?.on('block', callback)\n    return () => {\n      subscription?.removeAllListeners()\n    }\n  })\n}\n\nconst Example = () => {\n  const [tokenInBalance, setTokenInBalance] = useState<string>()\n  const [tokenOutBalance, setTokenOutBalance] = useState<string>()\n  const [txState, setTxState] = useState<TransactionState>(TransactionState.New)\n  const [blockNumber, setBlockNumber] = useState<number>(0)\n\n  // Listen for new blocks and update the wallet\n  useOnBlockUpdated(async (blockNumber: number) => {\n    refreshBalances()\n    setBlockNumber(blockNumber)\n  })\n\n  // Update wallet state given a block number\n  const refreshBalances = useCallback(async () => {\n    const provider = getProvider()\n    const address = getWalletAddress()\n    if (!address || !provider) {\n      return\n    }\n\n    setTokenInBalance(\n      await getCurrencyBalance(provider, address, CurrentConfig.currencies.in)\n    )\n    setTokenOutBalance(\n      await getCurrencyBalance(provider, address, CurrentConfig.currencies.out)\n    )\n  }, [])\n\n  // Event Handlers\n\n  const onConnectWallet = useCallback(async () => {\n    if (await connectBrowserExtensionWallet()) {\n      refreshBalances()\n    }\n  }, [refreshBalances])\n\n  const onAction = useCallback(async () => {\n    // TODO do your action here\n    setTxState(TransactionState.Sent)\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {CurrentConfig.rpc.mainnet === '' && (\n        <h2 className=\"error\">Please set your mainnet RPC URL in config.ts</h2>\n      )}\n      {CurrentConfig.env === Environment.WALLET_EXTENSION &&\n        getProvider() === null && (\n          <h2 className=\"error\">\n            Please install a wallet to use this example configuration\n          </h2>\n        )}\n      <h3>{`Wallet Address: ${getWalletAddress()}`}</h3>\n      {CurrentConfig.env === Environment.WALLET_EXTENSION &&\n        !getWalletAddress() && (\n          <button onClick={onConnectWallet}>Connect Wallet</button>\n        )}\n      <h3>{`Block Number: ${blockNumber + 1}`}</h3>\n      <h3>{`Transaction State: ${txState}`}</h3>\n      <h3>{`Token In (${CurrentConfig.currencies.in.symbol}) Balance: ${tokenInBalance}`}</h3>\n      <h3>{`Token Out (${CurrentConfig.currencies.out.symbol}) Balance: ${tokenOutBalance}`}</h3>\n      <button\n        onClick={onAction}\n        disabled={\n          txState === TransactionState.Sending ||\n          getProvider() === null ||\n          CurrentConfig.rpc.mainnet === ''\n        }>\n        <p>Trade</p>\n      </button>\n    </div>\n  )\n}\n\nexport default Example\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}