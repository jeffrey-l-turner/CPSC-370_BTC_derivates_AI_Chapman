{"ast":null,"code":"import { ethers, BigNumber } from 'ethers';\nimport { Environment, CurrentConfig } from '../config';\n// Single copies of provider and wallet\nconst mainnetProvider = new ethers.providers.JsonRpcProvider(CurrentConfig.rpc.mainnet);\nconst wallet = createWallet();\nconst browserExtensionProvider = createBrowserExtensionProvider();\nlet walletExtensionAddress = null;\n\n// Interfaces\n\nexport let TransactionState;\n\n// Provider and Wallet Functions\n(function (TransactionState) {\n  TransactionState[\"Failed\"] = \"Failed\";\n  TransactionState[\"New\"] = \"New\";\n  TransactionState[\"Rejected\"] = \"Rejected\";\n  TransactionState[\"Sending\"] = \"Sending\";\n  TransactionState[\"Sent\"] = \"Sent\";\n})(TransactionState || (TransactionState = {}));\nexport function getMainnetProvider() {\n  return mainnetProvider;\n}\nexport function getProvider() {\n  return CurrentConfig.env === Environment.WALLET_EXTENSION ? browserExtensionProvider : wallet.provider;\n}\nexport function getWalletAddress() {\n  return CurrentConfig.env === Environment.WALLET_EXTENSION ? walletExtensionAddress : wallet.address;\n}\nexport async function sendTransaction(transaction) {\n  if (CurrentConfig.env === Environment.WALLET_EXTENSION) {\n    return sendTransactionViaExtension(transaction);\n  } else {\n    return sendTransactionViaWallet(transaction);\n  }\n}\nexport async function connectBrowserExtensionWallet() {\n  if (!window.ethereum) {\n    return null;\n  }\n  const {\n    ethereum\n  } = window;\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const accounts = await provider.send('eth_requestAccounts', []);\n  if (accounts.length !== 1) {\n    return;\n  }\n  walletExtensionAddress = accounts[0];\n  return walletExtensionAddress;\n}\n\n// Internal Functionality\n\nfunction createWallet() {\n  let provider = mainnetProvider;\n  if (CurrentConfig.env == Environment.LOCAL) {\n    provider = new ethers.providers.JsonRpcProvider(CurrentConfig.rpc.local);\n  }\n  return new ethers.Wallet(CurrentConfig.wallet.privateKey, provider);\n}\nfunction createBrowserExtensionProvider() {\n  try {\n    var _window;\n    return new ethers.providers.Web3Provider((_window = window) === null || _window === void 0 ? void 0 : _window.ethereum, 'any');\n  } catch (e) {\n    console.log('No Wallet Extension Found');\n    return null;\n  }\n}\n\n// Transacting with a wallet extension via a Web3 Provider\nasync function sendTransactionViaExtension(transaction) {\n  try {\n    const receipt = await (browserExtensionProvider === null || browserExtensionProvider === void 0 ? void 0 : browserExtensionProvider.send('eth_sendTransaction', [transaction]));\n    if (receipt) {\n      return TransactionState.Sent;\n    } else {\n      return TransactionState.Failed;\n    }\n  } catch (e) {\n    console.log(e);\n    return TransactionState.Rejected;\n  }\n}\nasync function sendTransactionViaWallet(transaction) {\n  const provider = getProvider();\n  if (!provider) {\n    return TransactionState.Failed;\n  }\n  if (transaction.value) {\n    transaction.value = BigNumber.from(transaction.value);\n  }\n  const txRes = await wallet.sendTransaction(transaction);\n  let receipt = null;\n  while (receipt === null) {\n    try {\n      receipt = await provider.getTransactionReceipt(txRes.hash);\n      if (receipt === null) {\n        continue;\n      }\n    } catch (e) {\n      console.log(`Receipt error:`, e);\n      break;\n    }\n  }\n  if (receipt) {\n    return TransactionState.Sent;\n  } else {\n    return TransactionState.Failed;\n  }\n}","map":{"version":3,"names":["ethers","BigNumber","Environment","CurrentConfig","mainnetProvider","providers","JsonRpcProvider","rpc","mainnet","wallet","createWallet","browserExtensionProvider","createBrowserExtensionProvider","walletExtensionAddress","TransactionState","getMainnetProvider","getProvider","env","WALLET_EXTENSION","provider","getWalletAddress","address","sendTransaction","transaction","sendTransactionViaExtension","sendTransactionViaWallet","connectBrowserExtensionWallet","window","ethereum","Web3Provider","accounts","send","length","LOCAL","local","Wallet","privateKey","e","console","log","receipt","Sent","Failed","Rejected","value","from","txRes","getTransactionReceipt","hash"],"sources":["/Users/carsonmccue/Desktop/CPSC-370_BTC_derivates_AI_Chapman/workspaces/my-swap/src/libs/providers.ts"],"sourcesContent":["import { ethers, providers, BigNumber } from 'ethers'\nimport { Environment, CurrentConfig } from '../config'\nimport { BaseProvider } from '@ethersproject/providers'\n\n// Single copies of provider and wallet\nconst mainnetProvider = new ethers.providers.JsonRpcProvider(\n  CurrentConfig.rpc.mainnet\n)\nconst wallet = createWallet()\n\nconst browserExtensionProvider = createBrowserExtensionProvider()\nlet walletExtensionAddress: string | null = null\n\n// Interfaces\n\nexport enum TransactionState {\n  Failed = 'Failed',\n  New = 'New',\n  Rejected = 'Rejected',\n  Sending = 'Sending',\n  Sent = 'Sent',\n}\n\n// Provider and Wallet Functions\n\nexport function getMainnetProvider(): BaseProvider {\n  return mainnetProvider\n}\n\nexport function getProvider(): providers.Provider | null {\n  return CurrentConfig.env === Environment.WALLET_EXTENSION\n    ? browserExtensionProvider\n    : wallet.provider\n}\n\nexport function getWalletAddress(): string | null {\n  return CurrentConfig.env === Environment.WALLET_EXTENSION\n    ? walletExtensionAddress\n    : wallet.address\n}\n\nexport async function sendTransaction(\n  transaction: ethers.providers.TransactionRequest\n): Promise<TransactionState> {\n  if (CurrentConfig.env === Environment.WALLET_EXTENSION) {\n    return sendTransactionViaExtension(transaction)\n  } else {\n    return sendTransactionViaWallet(transaction)\n  }\n}\n\nexport async function connectBrowserExtensionWallet() {\n  if (!window.ethereum) {\n    return null\n  }\n\n  const { ethereum } = window\n  const provider = new ethers.providers.Web3Provider(ethereum)\n  const accounts = await provider.send('eth_requestAccounts', [])\n\n  if (accounts.length !== 1) {\n    return\n  }\n\n  walletExtensionAddress = accounts[0]\n  return walletExtensionAddress\n}\n\n// Internal Functionality\n\nfunction createWallet(): ethers.Wallet {\n  let provider = mainnetProvider\n  if (CurrentConfig.env == Environment.LOCAL) {\n    provider = new ethers.providers.JsonRpcProvider(CurrentConfig.rpc.local)\n  }\n  return new ethers.Wallet(CurrentConfig.wallet.privateKey, provider)\n}\n\nfunction createBrowserExtensionProvider(): ethers.providers.Web3Provider | null {\n  try {\n    return new ethers.providers.Web3Provider(window?.ethereum, 'any')\n  } catch (e) {\n    console.log('No Wallet Extension Found')\n    return null\n  }\n}\n\n// Transacting with a wallet extension via a Web3 Provider\nasync function sendTransactionViaExtension(\n  transaction: ethers.providers.TransactionRequest\n): Promise<TransactionState> {\n  try {\n    const receipt = await browserExtensionProvider?.send(\n      'eth_sendTransaction',\n      [transaction]\n    )\n    if (receipt) {\n      return TransactionState.Sent\n    } else {\n      return TransactionState.Failed\n    }\n  } catch (e) {\n    console.log(e)\n    return TransactionState.Rejected\n  }\n}\n\nasync function sendTransactionViaWallet(\n  transaction: ethers.providers.TransactionRequest\n): Promise<TransactionState> {\n  const provider = getProvider()\n  if (!provider) {\n    return TransactionState.Failed\n  }\n\n  if (transaction.value) {\n    transaction.value = BigNumber.from(transaction.value)\n  }\n\n  const txRes = await wallet.sendTransaction(transaction)\n  let receipt = null\n\n  while (receipt === null) {\n    try {\n      receipt = await provider.getTransactionReceipt(txRes.hash)\n\n      if (receipt === null) {\n        continue\n      }\n    } catch (e) {\n      console.log(`Receipt error:`, e)\n      break\n    }\n  }\n\n  if (receipt) {\n    return TransactionState.Sent\n  } else {\n    return TransactionState.Failed\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}