{"ast":null,"code":"// This file stores web3 related constants such as addresses, token definitions, ETH currency references and ABI's\n\nimport { Ether, SupportedChainId, Token } from '@uniswap/sdk-core';\n\n// Addresses\n\nexport const POOL_FACTORY_CONTRACT_ADDRESS = '0x1F98431c8aD98523631AE4a59f267346ea31F984';\nexport const QUOTER_CONTRACT_ADDRESS = '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6';\nexport const V3_SWAP_ROUTER_ADDRESS = '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45';\nexport const WETH_CONTRACT_ADDRESS = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n\n// Currencies and Tokens\n\nexport const ETH = Ether.onChain(SupportedChainId.MAINNET);\nexport const WETH_TOKEN = new Token(SupportedChainId.MAINNET, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether');\nexport const USDC_TOKEN = new Token(SupportedChainId.MAINNET, '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', 6, 'USDC', 'USD//C');\n\n// ABI's\n\nexport const ERC20_ABI = [\n// Read-Only Functions\n'function balanceOf(address owner) view returns (uint256)', 'function decimals() view returns (uint8)', 'function symbol() view returns (string)',\n// Authenticated Functions\n'function transfer(address to, uint amount) returns (bool)',\n// Events\n'event Transfer(address indexed from, address indexed to, uint amount)'];\nexport const WETH_ABI = [\n// Wrap ETH\n'function deposit() payable',\n// Unwrap ETH\n'function withdraw(uint wad) public'];\n\n// Transactions\n\nexport const MAX_FEE_PER_GAS = 100000000000;\nexport const MAX_PRIORITY_FEE_PER_GAS = 100000000000;","map":{"version":3,"names":["Ether","SupportedChainId","Token","POOL_FACTORY_CONTRACT_ADDRESS","QUOTER_CONTRACT_ADDRESS","V3_SWAP_ROUTER_ADDRESS","WETH_CONTRACT_ADDRESS","ETH","onChain","MAINNET","WETH_TOKEN","USDC_TOKEN","ERC20_ABI","WETH_ABI","MAX_FEE_PER_GAS","MAX_PRIORITY_FEE_PER_GAS"],"sources":["/Users/carsonmccue/Desktop/CPSC-370_BTC_derivates_AI_Chapman/workspaces/my-swap/src/libs/constants.ts"],"sourcesContent":["// This file stores web3 related constants such as addresses, token definitions, ETH currency references and ABI's\n\nimport { Ether, SupportedChainId, Token } from '@uniswap/sdk-core'\n\n// Addresses\n\nexport const POOL_FACTORY_CONTRACT_ADDRESS =\n  '0x1F98431c8aD98523631AE4a59f267346ea31F984'\nexport const QUOTER_CONTRACT_ADDRESS =\n  '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6'\nexport const V3_SWAP_ROUTER_ADDRESS =\n  '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45'\nexport const WETH_CONTRACT_ADDRESS =\n  '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n\n// Currencies and Tokens\n\nexport const ETH = Ether.onChain(SupportedChainId.MAINNET)\n\nexport const WETH_TOKEN = new Token(\n  SupportedChainId.MAINNET,\n  '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  18,\n  'WETH',\n  'Wrapped Ether'\n)\n\nexport const USDC_TOKEN = new Token(\n  SupportedChainId.MAINNET,\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n  6,\n  'USDC',\n  'USD//C'\n)\n\n// ABI's\n\nexport const ERC20_ABI = [\n  // Read-Only Functions\n  'function balanceOf(address owner) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n  'function symbol() view returns (string)',\n\n  // Authenticated Functions\n  'function transfer(address to, uint amount) returns (bool)',\n\n  // Events\n  'event Transfer(address indexed from, address indexed to, uint amount)',\n]\n\nexport const WETH_ABI = [\n  // Wrap ETH\n  'function deposit() payable',\n\n  // Unwrap ETH\n  'function withdraw(uint wad) public',\n]\n\n// Transactions\n\nexport const MAX_FEE_PER_GAS = 100000000000\nexport const MAX_PRIORITY_FEE_PER_GAS = 100000000000\n"],"mappings":"AAAA;;AAEA,SAASA,KAAK,EAAEC,gBAAgB,EAAEC,KAAK,QAAQ,mBAAmB;;AAElE;;AAEA,OAAO,MAAMC,6BAA6B,GACxC,4CAA4C;AAC9C,OAAO,MAAMC,uBAAuB,GAClC,4CAA4C;AAC9C,OAAO,MAAMC,sBAAsB,GACjC,4CAA4C;AAC9C,OAAO,MAAMC,qBAAqB,GAChC,4CAA4C;;AAE9C;;AAEA,OAAO,MAAMC,GAAG,GAAGP,KAAK,CAACQ,OAAO,CAACP,gBAAgB,CAACQ,OAAO,CAAC;AAE1D,OAAO,MAAMC,UAAU,GAAG,IAAIR,KAAK,CACjCD,gBAAgB,CAACQ,OAAO,EACxB,4CAA4C,EAC5C,EAAE,EACF,MAAM,EACN,eAAe,CAChB;AAED,OAAO,MAAME,UAAU,GAAG,IAAIT,KAAK,CACjCD,gBAAgB,CAACQ,OAAO,EACxB,4CAA4C,EAC5C,CAAC,EACD,MAAM,EACN,QAAQ,CACT;;AAED;;AAEA,OAAO,MAAMG,SAAS,GAAG;AACvB;AACA,0DAA0D,EAC1D,0CAA0C,EAC1C,yCAAyC;AAEzC;AACA,2DAA2D;AAE3D;AACA,uEAAuE,CACxE;AAED,OAAO,MAAMC,QAAQ,GAAG;AACtB;AACA,4BAA4B;AAE5B;AACA,oCAAoC,CACrC;;AAED;;AAEA,OAAO,MAAMC,eAAe,GAAG,YAAY;AAC3C,OAAO,MAAMC,wBAAwB,GAAG,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}